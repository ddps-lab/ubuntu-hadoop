#! /bin/bash

if [ $2 == 1 -a -z "$5"  ] || [ $2 == 0 -a -z "$4" ]; then
        echo "-----------------------------------------------------------------"
	echo ""
        echo "에러 : 파라미터가 없습니다"
        echo ""
	echo "run_hadoop 실행 방법"
        echo ""
	echo "./run_hadoop [네트워크 이름] [master 컨테이너 만듦 여부] [만들 slave 컨테이너의 첫 범위] [만들 slave 컨테이너의 마지막 범위] [총 slaves 컨테이너 개수]"
        echo ""
	echo "예)"
	echo "./run_hadoop my-net 1 1 3 10"
	echo "./run_hadoop my-net 0 4 6"
        echo ""
	echo "첫번째 명령어 설명)"
	echo "두번째 파라미터가 1 이기 때문에 master 컨테이너를 만들고,"
	echo "세번째, 네번째 파라미터가 1,3 이기 때문에 slaves 3개, 즉 slave1, slave2, slave3 컨테이너들을 만들고,"
	echo "첫번째 파라미터 값에 따라 my-net이라는 네트워크에 연결한다."
	echo "master 컨테이너를 만들 때(두번째 파라미터가 1일 때) 마지막 파라미터 값에 따라,"
	echo "workers file에 slaves 이름을 1부터 10까지 순서대로 10개(slave1, slave2, .. slave10) 추가한다."
        echo ""
	echo "두번째 명령어 설명)"
	echo "두번째 파라미터가 0 이기 때문에 master 컨테이너는 만들지 않고,"
	echo "세번째, 네번째 파라미터가 4, 6 이기 때문에 slaves 3개, 즉 slave4, slave5, slave6 컨테이너를 만들고,"
	echo "첫번째 파라미터 값에 따라 my-net이라는 네트워크에 연결한다."
        echo ""
        echo "-----------------------------------------------------------------"
        exit 0
fi

NETWORK_NAME=$1
MASTER_CREATE=$2
CONTAINER_START_INDEX=$3
CONTAINER_END_INDEX=$4
NUM_OF_ALL_SLAVES=$5

SERVER_MEMORY=50
NUM_OF_CONTAINERS=`expr $CONTAINER_END_INDEX - $CONTAINER_START_INDEX + 1`
MASTER_CONTAINER_MEMORY=10
SLAVE_CONTAINER_MEMORY=`expr $SERVER_MEMORY / $NUM_OF_CONTAINERS`
STORAGE_OPT_SIZE=300

#slaves에 할당 메모리 사이즈의 최댓값은 master의 것으로 제한한다.
if [ $SLAVE_CONTAINER_MEMORY -ge $MASTER_CONTAINER_MEMORY ]; then
	SLAVE_CONTAINER_MEMORY=$MASTER_CONTAINER_MEMORY
fi

RANDOM_NUM=`expr $RANDOM % 10000 + 30000`
IMAGE_NAME="kmubigdata/ubuntu-hadoop"
DOCKER_RUN="sudo docker run -dit --network $NETWORK_NAME --name"
MASTER_OPTION="--cpu-shares 1024 --memory $(($MASTER_CONTAINER_MEMORY))g"
SLAVE_OPTION="--cpu-shares 1024 --memory $(($SLAVE_CONTAINER_MEMORY))g"
MASTER_COMMAND="$DOCKER_RUN master -p $RANDOM_NUM:8088 $MASTER_OPTION"
COMMAND_LAST="$IMAGE_NAME /bin/bash"

#두번째 파라미터가 1일 때, master 컨테이너를 만든다. 
#또한 workers 파일의 내용을 slaves 이름으로 수정한다.
if [ $MASTER_CREATE == 1 ]; then
        MASTER_COMMAND="$MASTER_COMMAND $COMMAND_LAST"
        $MASTER_COMMAND
	./make_workers_file 1 $NUM_OF_ALL_SLAVES
fi

numOfContainers=$CONTAINER_START_INDEX

#세번째 파라미터 수부터 네번째 파라미터 수까지 올라가며 slave를 하나씩 만든다.
#이 때 slave의 이름은 slave$numOfContainers 가 된다.
while [ $numOfContainers -lt $(($CONTAINER_END_INDEX+1)) ];
do
        SLAVE_COMMAND="$DOCKER_RUN slave$numOfContainers $SLAVE_OPTION $COMMAND_LAST"
        $SLAVE_COMMAND
        numOfContainers=$(($numOfContainers+1))
done
