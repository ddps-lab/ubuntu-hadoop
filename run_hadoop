#! /bin/bash

if [[ -z "$4" ]]; then
        echo "-----------------------------------------------------------------"
        echo "에러 : 파라미터가 없습니다"
        echo ""
        echo "run_hadoop 실행 방법)"
        echo "./run_hadoop [네트워크 이름] [master 컨테이너 만듦 여부] [만들 slave 컨테이너의 첫 범위] [만들 slave 컨테이너의 마지막 범위]"
        echo ""
        echo "예) ./run_hadoop my-net 1 1 3"
        echo "master 컨테이너를 만들고(파라미터가 1 이기 때문에), slave1, slave2, slave3 컨테이너들을 만들고(파라미터가 1,3 이기 때문에) my-net 이라는 네트워크에 연결한다."
        echo "-----------------------------------------------------------------"
        exit 0
fi

SERVER_MEMORY=50
NUM_OF_CONTAINERS=`expr $2 + $4 - $3 + 1`
CONTAINER_MEMORY=`expr $SERVER_MEMORY / $NUM_OF_CONTAINERS`g

RANDOM_NUM=`expr $RANDOM % 10000 + 30000`
IMAGE_NAME="kmubigdata/ubuntu-hadoop"
DOCKER_RUN="sudo docker run -dit --network $1 --name"
MASTER_OPTION="--cpu-shares 1024 --memory $CONTAINER_MEMORY"
SLAVE_OPTION="--cpu-shares 1024 --memory $CONTAINER_MEMORY --storage-opt size=300G "
MASTER_COMMAND="$DOCKER_RUN master -p $RANDOM_NUM:8088 $MASTER_OPTION"
COMMAND_LAST="$IMAGE_NAME /bin/bash"

#두번째 파라미터가 1일 때, master 컨테이너를 만든다.
if [ $2 == 1 ]; then
        MASTER_COMMAND="$MASTER_COMMAND $COMMAND_LAST"
        $MASTER_COMMAND
fi

numOfContainers=$3

#세번째 파라미터 수부터 네번째 파라미터 수까지 올라가며 slave를 하나씩 만든다.
#이 때 slave의 이름은 slave$numOfContainers 가 된다.
while [ $numOfContainers -lt $(($4+1)) ];
do
        SLAVE_COMMAND="$DOCKER_RUN slave$numOfContainers $SLAVE_OPTION $COMMAND_LAST"
        $SLAVE_COMMAND
        numOfContainers=$(($numOfContainers+1))
done
